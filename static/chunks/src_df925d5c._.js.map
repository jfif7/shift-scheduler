{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-background text-muted-foreground w-full border-b shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground text-muted-foreground inline-flex h-14 items-center justify-center gap-2 px-8 py-4 text-sm font-medium whitespace-nowrap transition-all hover:text-foreground hover:bg-muted/80 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 relative after:absolute after:bottom-0 after:left-0 after:right-0 after:h-1 after:bg-transparent data-[state=active]:after:bg-primary\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ugBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 529, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/utils/dateUtils.ts"],"sourcesContent":["export const getDaysInMonth = (month: number, year: number): number => {\n  if (month < 0 || month > 11 || !year) return 0\n  return new Date(year, month + 1, 0).getDate()\n}\n\nexport const getMonthName = (\n  month: number,\n  t: (key: string) => string\n): string => {\n  if (month < 0 || month > 11) return \"\"\n  return t(`months.${month}`) || \"\"\n}\n\nexport const getFirstDayOfMonth = (month: number, year: number): number => {\n  return new Date(year, month, 1).getDay()\n}\n\nexport const isWeekend = (\n  day: number,\n  month: number,\n  year: number\n): boolean => {\n  const dayOfWeek = new Date(year, month, day).getDay()\n  return dayOfWeek === 0 || dayOfWeek === 6 // Sunday or Saturday\n}\n\nexport const getCurrentMonthYear = () => {\n  const now = new Date()\n  return {\n    month: now.getMonth(),\n    year: now.getFullYear(),\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAAO,MAAM,iBAAiB,CAAC,OAAe;IAC5C,IAAI,QAAQ,KAAK,QAAQ,MAAM,CAAC,MAAM,OAAO;IAC7C,OAAO,IAAI,KAAK,MAAM,QAAQ,GAAG,GAAG,OAAO;AAC7C;AAEO,MAAM,eAAe,CAC1B,OACA;IAEA,IAAI,QAAQ,KAAK,QAAQ,IAAI,OAAO;IACpC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,KAAK;AACjC;AAEO,MAAM,qBAAqB,CAAC,OAAe;IAChD,OAAO,IAAI,KAAK,MAAM,OAAO,GAAG,MAAM;AACxC;AAEO,MAAM,YAAY,CACvB,KACA,OACA;IAEA,MAAM,YAAY,IAAI,KAAK,MAAM,OAAO,KAAK,MAAM;IACnD,OAAO,cAAc,KAAK,cAAc,EAAE,qBAAqB;;AACjE;AAEO,MAAM,sBAAsB;IACjC,MAAM,MAAM,IAAI;IAChB,OAAO;QACL,OAAO,IAAI,QAAQ;QACnB,MAAM,IAAI,WAAW;IACvB;AACF","debugId":null}},
    {"offset": {"line": 568, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/components/schedule/ScheduleHistory.tsx"],"sourcesContent":["import { useState } from \"react\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport { Plus, Trash2, Calendar, CheckCircle, Circle } from \"lucide-react\"\nimport { ScheduleItem } from \"@/types/schedule\"\nimport { getMonthName } from \"@/utils/dateUtils\"\nimport { toast } from \"sonner\"\nimport { useTranslations } from \"next-intl\"\n\ninterface ScheduleHistoryProps {\n  schedules: ScheduleItem[]\n  activeScheduleId: string | null\n  onScheduleSelect: (scheduleId: string | null) => void\n  onScheduleAdd: (\n    month: number,\n    year: number,\n    importFromScheduleId?: string\n  ) => void\n  onScheduleDelete: (scheduleId: string) => void\n}\n\nexport const ScheduleHistory = ({\n  schedules,\n  activeScheduleId,\n  onScheduleSelect,\n  onScheduleAdd,\n  onScheduleDelete,\n}: ScheduleHistoryProps) => {\n  const [isAddingSchedule, setIsAddingSchedule] = useState(false)\n  const [newMonth, setNewMonth] = useState<number | null>(null)\n  const [newYear, setNewYear] = useState<number | null>(null)\n  const [importFromScheduleId, setImportFromScheduleId] =\n    useState<string>(\"auto\")\n  const t = useTranslations()\n\n  // Auto-collapse when a schedule is selected\n  const shouldShowCollapsed = activeScheduleId && !isAddingSchedule\n\n  const currentDate = new Date()\n  const currentMonth = currentDate.getMonth()\n  const currentYear = currentDate.getFullYear()\n\n  // Get the most recent schedule for auto-import\n  const getMostRecentSchedule = (): ScheduleItem | null => {\n    if (schedules.length === 0) return null\n\n    let mostRecent = schedules[0]\n    for (let i = 1; i < schedules.length; i++) {\n      const current = schedules[i]\n      if (\n        current.year > mostRecent.year ||\n        (current.year === mostRecent.year && current.month > mostRecent.month)\n      ) {\n        mostRecent = current\n      }\n    }\n    return mostRecent\n  }\n  // Get the next month/year after the latest schedule, or current month/year if no schedules\n  const getNextMonthYear = () => {\n    const mostRecent = getMostRecentSchedule()\n    if (!mostRecent) {\n      return {\n        month: currentMonth,\n        year: currentYear,\n      }\n    }\n\n    const recentDate = new Date(mostRecent.year, mostRecent.month)\n    const nextMonth = new Date(\n      recentDate.getFullYear(),\n      recentDate.getMonth() + 1\n    )\n\n    return {\n      month: nextMonth.getMonth(),\n      year: nextMonth.getFullYear(),\n    }\n  }\n\n  const handleAddSchedule = () => {\n    if (!newMonth || !newYear) {\n      toast.error(t(\"toast.invalidInput\"), {\n        description: t(\"toast.selectBothMonthYear\"),\n      })\n      return\n    }\n\n    try {\n      // Determine which schedule to import from\n      let importScheduleId: string | undefined\n      if (importFromScheduleId === \"auto\") {\n        const mostRecent = getMostRecentSchedule()\n        importScheduleId = mostRecent?.id\n      } else if (importFromScheduleId !== \"none\") {\n        importScheduleId = importFromScheduleId\n      }\n\n      onScheduleAdd(newMonth, newYear, importScheduleId)\n      setIsAddingSchedule(false)\n      setNewMonth(null)\n      setNewYear(null)\n      setImportFromScheduleId(\"auto\")\n\n      const importMessage = importScheduleId\n        ? t(\"toast.withImportedEmployees\")\n        : t(\"toast.withEmptyEmployeeList\")\n\n      toast.success(t(\"toast.scheduleCreated\"), {\n        description: t(\"toast.scheduleCreatedDescription\", {\n          month: getMonthName(newMonth, t),\n          year: newYear,\n          importMessage,\n        }),\n      })\n    } catch (error) {\n      toast.error(t(\"toast.creationFailed\"), {\n        description:\n          error instanceof Error\n            ? error.message\n            : t(\"toast.creationFailedDescription\"),\n      })\n    }\n  }\n\n  const handleDeleteSchedule = (\n    scheduleId: string,\n    month: number,\n    year: number\n  ) => {\n    onScheduleDelete(scheduleId)\n    toast.success(t(\"toast.scheduleDeleted\"), {\n      description: t(\"toast.scheduleDeletedDescription\", {\n        month: getMonthName(month, t),\n        year,\n      }),\n    })\n  }\n\n  const sortedSchedules = [...schedules].sort((a, b) => {\n    // Most recent first\n    return b.year - a.year || b.month - a.month\n  })\n\n  const months = Array.from({ length: 12 }, (_, i) => ({\n    value: i.toString(),\n    label: t(`months.${i}`),\n  }))\n\n  const years = Array.from({ length: 10 }, (_, i) => {\n    const year = currentDate.getFullYear() - 2 + i\n    return { value: year.toString(), label: year.toString() }\n  })\n\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"flex items-center gap-2\">\n            <Calendar className=\"w-5 h-5\" />\n            {t(\"scheduleHistory.title\")}\n            {shouldShowCollapsed && activeScheduleId && (\n              <span className=\"text-sm font-normal text-muted-foreground\">\n                -{\" \"}\n                {(() => {\n                  const activeSchedule = schedules.find(\n                    (s) => s.id === activeScheduleId\n                  )\n                  return activeSchedule\n                    ? `${getMonthName(activeSchedule.month, t)} ${\n                        activeSchedule.year\n                      }`\n                    : \"\"\n                })()}\n              </span>\n            )}\n          </CardTitle>\n          <div className=\"flex items-center gap-2\">\n            {shouldShowCollapsed && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => onScheduleSelect(null)}\n                className=\"flex items-center gap-2\"\n              >\n                {t(\"scheduleHistory.showAll\")}\n              </Button>\n            )}\n            <Button\n              onClick={() => {\n                const { month, year } = getNextMonthYear()\n                setIsAddingSchedule(true)\n                setNewMonth(month)\n                setNewYear(year)\n                setImportFromScheduleId(\"auto\")\n              }}\n              size=\"sm\"\n              className=\"flex items-center gap-2\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              {t(\"scheduleHistory.addSchedule\")}\n            </Button>\n          </div>\n        </div>\n        {schedules.length === 0 && (\n          <p className=\"text-sm text-muted-foreground\">\n            {t(\"scheduleHistory.noSchedulesYet\")}\n          </p>\n        )}\n      </CardHeader>\n      {!shouldShowCollapsed && (\n        <CardContent className=\"space-y-4\">\n          {/* Add Schedule Form */}\n          {isAddingSchedule && (\n            <div className=\"p-4 border rounded-lg bg-muted/50 space-y-4\">\n              <h4 className=\"font-medium\">\n                {t(\"scheduleHistory.createNewSchedule\")}\n              </h4>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"text-sm font-medium\">\n                    {t(\"scheduleHistory.month\")}\n                  </label>\n                  <Select\n                    value={newMonth?.toString() || \"\"}\n                    onValueChange={(value) => setNewMonth(parseInt(value))}\n                  >\n                    <SelectTrigger>\n                      <SelectValue\n                        placeholder={t(\"scheduleHistory.selectMonth\")}\n                      />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {months.map((month) => (\n                        <SelectItem key={month.value} value={month.value}>\n                          {month.label}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium\">\n                    {t(\"scheduleHistory.year\")}\n                  </label>\n                  <Select\n                    value={newYear?.toString() || \"\"}\n                    onValueChange={(value) => setNewYear(parseInt(value))}\n                  >\n                    <SelectTrigger>\n                      <SelectValue\n                        placeholder={t(\"scheduleHistory.selectYear\")}\n                      />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {years.map((year) => (\n                        <SelectItem key={year.value} value={year.value}>\n                          {year.label}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              {/* Employee Import Options */}\n              {schedules.length > 0 && (\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium\">\n                    {t(\"scheduleHistory.employeeImport\")}\n                  </label>\n                  <Select\n                    value={importFromScheduleId}\n                    onValueChange={setImportFromScheduleId}\n                  >\n                    <SelectTrigger>\n                      <SelectValue\n                        placeholder={t(\"scheduleHistory.chooseImportOption\")}\n                      />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"auto\">\n                        {t(\"scheduleHistory.autoImportFromRecent\")}\n                      </SelectItem>\n                      <SelectItem value=\"none\">\n                        {t(\"scheduleHistory.startWithEmptyList\")}\n                      </SelectItem>\n                      {sortedSchedules.map((schedule) => (\n                        <SelectItem key={schedule.id} value={schedule.id}>\n                          {t(\"scheduleHistory.copyFrom\")}{\" \"}\n                          {getMonthName(schedule.month, t)} {schedule.year} (\n                          {schedule.employees.length}{\" \"}\n                          {t(\"scheduleHistory.employees\")})\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                  <p className=\"text-xs text-muted-foreground\">\n                    {t(\"scheduleHistory.importNote\")}\n                  </p>\n                </div>\n              )}\n              <div className=\"flex gap-2\">\n                <Button onClick={handleAddSchedule} size=\"sm\">\n                  {t(\"scheduleHistory.createSchedule\")}\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  onClick={() => {\n                    setIsAddingSchedule(false)\n                    setNewMonth(null)\n                    setNewYear(null)\n                    setImportFromScheduleId(\"auto\")\n                  }}\n                  size=\"sm\"\n                >\n                  {t(\"scheduleHistory.cancel\")}\n                </Button>\n              </div>\n            </div>\n          )}\n\n          {/* Schedule List */}\n          {sortedSchedules.length > 0 && (\n            <div className=\"space-y-2\">\n              {sortedSchedules.map((schedule) => (\n                <div\n                  key={schedule.id}\n                  className={`p-3 border rounded-lg cursor-pointer transition-colors ${\n                    schedule.id === activeScheduleId\n                      ? \"bg-primary/10 border-primary\"\n                      : \"hover:bg-muted/50\"\n                  }`}\n                  onClick={() => {\n                    if (schedule.id === activeScheduleId) {\n                      onScheduleSelect(null)\n                    } else {\n                      onScheduleSelect(schedule.id)\n                    }\n                  }}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"flex items-center gap-2\">\n                        {schedule.isGenerated ? (\n                          <CheckCircle className=\"w-4 h-4 text-green-600\" />\n                        ) : (\n                          <Circle className=\"w-4 h-4 text-muted-foreground\" />\n                        )}\n                        <span className=\"font-medium\">\n                          {getMonthName(schedule.month, t)} {schedule.year}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <div className=\"text-xs text-muted-foreground\">\n                        {schedule.employees.length}{\" \"}\n                        {t(\"scheduleHistory.employees\")}\n                      </div>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={(e) => {\n                          e.stopPropagation()\n                          handleDeleteSchedule(\n                            schedule.id,\n                            schedule.month,\n                            schedule.year\n                          )\n                        }}\n                        className=\"h-8 w-8 p-0 text-destructive hover:text-destructive hover:bg-destructive/10\"\n                      >\n                        <Trash2 className=\"w-3 h-3\" />\n                      </Button>\n                    </div>\n                  </div>\n                  <div className=\"text-xs text-muted-foreground mt-1\">\n                    {t(\"scheduleHistory.created\")}{\" \"}\n                    {schedule.createdAt.toLocaleDateString()}\n                    {schedule.isGenerated && (\n                      <span className=\"ml-2 text-green-600\">\n                        • {t(\"scheduleHistory.generated\")}\n                      </span>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </CardContent>\n      )}\n    </Card>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1229, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 1261, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 1295, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 1347, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/components/schedule/EmployeeManager.tsx"],"sourcesContent":["import { useState } from \"react\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Plus, Trash2 } from \"lucide-react\"\nimport { Employee } from \"@/types/schedule\"\nimport { useTranslations } from \"next-intl\"\n\ninterface EmployeeManagerProps {\n  employees: Employee[]\n  selectedEmployee: string\n  onEmployeeSelect: (id: string) => void\n  onAddEmployee: () => void\n  onRemoveEmployee: (id: string) => void\n  onUpdateEmployee: (id: string, updates: Partial<Employee>) => void\n  onToggleTag: (employeeId: string, tag: string) => void\n  predefinedTags: string[]\n  hasActiveSchedule: boolean\n}\n\nexport const EmployeeManager = ({\n  employees,\n  selectedEmployee,\n  onEmployeeSelect,\n  onAddEmployee,\n  onRemoveEmployee,\n  onUpdateEmployee,\n  onToggleTag,\n  predefinedTags,\n  hasActiveSchedule,\n}: EmployeeManagerProps) => {\n  const [editingEmployee, setEditingEmployee] = useState<string>(\"\")\n  const [editingName, setEditingName] = useState<string>(\"\")\n  const [editingShifts, setEditingShifts] = useState<number>(0)\n  const t = useTranslations()\n\n  const startEditingEmployee = (employee: Employee) => {\n    setEditingEmployee(employee.id)\n    setEditingName(employee.name)\n    setEditingShifts(employee.shiftsPerMonth)\n  }\n\n  const saveEmployeeEdits = () => {\n    onUpdateEmployee(editingEmployee, {\n      name: editingName,\n      shiftsPerMonth: editingShifts,\n    })\n    setEditingEmployee(\"\")\n  }\n\n  const cancelEmployeeEdits = () => {\n    setEditingEmployee(\"\")\n    setEditingName(\"\")\n    setEditingShifts(0)\n  }\n\n  return (\n    <Card className=\"flex flex-col h-[600px]\">\n      <CardHeader className=\"flex-shrink-0\">\n        <CardTitle>{t(\"employees.title\")}</CardTitle>\n        <p className=\"text-sm text-muted-foreground\">\n          {hasActiveSchedule\n            ? t(\"employees.selectScheduleDescription\")\n            : t(\"employees.noActiveScheduleDescription\")}\n        </p>\n      </CardHeader>\n      <CardContent className=\"flex-1 flex flex-col overflow-hidden\">\n        {!hasActiveSchedule ? (\n          <div className=\"text-center py-8\">\n            <p className=\"text-muted-foreground mb-4\">\n              {t(\"employees.noActiveScheduleMessage\")}\n            </p>\n          </div>\n        ) : employees.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <p className=\"text-muted-foreground mb-4\">\n              {t(\"employees.noEmployeesMessage\")}\n            </p>\n            <Button onClick={onAddEmployee}>\n              <Plus className=\"w-4 h-4 mr-2\" />\n              {t(\"employees.addFirstEmployee\")}\n            </Button>\n          </div>\n        ) : (\n          <div className=\"flex-1 flex flex-col min-h-0\">\n            <div className=\"flex-1 space-y-3 overflow-y-auto pr-2\">\n              {employees.map((employee) => (\n                <div\n                  key={employee.id}\n                  className={`border rounded-lg transition-colors ${\n                    selectedEmployee === employee.id\n                      ? \"border-blue-500 bg-blue-50\"\n                      : \"border-gray-200 hover:border-gray-300\"\n                  }`}\n                >\n                  {editingEmployee === employee.id ? (\n                    // Editing mode\n                    <div className=\"p-4 space-y-4\">\n                      <div className=\"grid grid-cols-2 gap-4\">\n                        <div>\n                          <Label htmlFor=\"editName\">\n                            {t(\"employees.name\")}\n                          </Label>\n                          <Input\n                            id=\"editName\"\n                            value={editingName}\n                            onChange={(e) => setEditingName(e.target.value)}\n                            placeholder={t(\"employees.namePlaceholder\")}\n                          />\n                        </div>\n                        <div>\n                          <Label htmlFor=\"editShifts\">\n                            {t(\"employees.shiftsPerMonth\")}\n                          </Label>\n                          <Input\n                            id=\"editShifts\"\n                            type=\"number\"\n                            min=\"1\"\n                            max=\"31\"\n                            value={editingShifts}\n                            onChange={(e) =>\n                              setEditingShifts(\n                                Number.parseInt(e.target.value) || 0\n                              )\n                            }\n                          />\n                        </div>\n                      </div>\n\n                      <div>\n                        <Label>{t(\"employees.tags\")}</Label>\n                        <div className=\"flex flex-wrap gap-2 mt-2\">\n                          {predefinedTags.map((tag) => {\n                            const hasTag = employee.tags.includes(tag)\n                            return (\n                              <Button\n                                key={tag}\n                                variant={hasTag ? \"default\" : \"outline\"}\n                                size=\"sm\"\n                                onClick={() => onToggleTag(employee.id, tag)}\n                              >\n                                {t(tag)}\n                              </Button>\n                            )\n                          })}\n                        </div>\n                      </div>\n\n                      <div className=\"flex gap-2\">\n                        <Button onClick={saveEmployeeEdits} size=\"sm\">\n                          {t(\"employees.save\")}\n                        </Button>\n                        <Button\n                          onClick={cancelEmployeeEdits}\n                          variant=\"outline\"\n                          size=\"sm\"\n                        >\n                          {t(\"employees.cancel\")}\n                        </Button>\n                        <Button\n                          onClick={() => {\n                            onRemoveEmployee(employee.id)\n                            setEditingEmployee(\"\")\n                          }}\n                          variant=\"destructive\"\n                          size=\"sm\"\n                        >\n                          <Trash2 className=\"w-4 h-4 mr-1\" />\n                          {t(\"employees.delete\")}\n                        </Button>\n                      </div>\n                    </div>\n                  ) : (\n                    // Display mode\n                    <div\n                      className=\"p-3 cursor-pointer\"\n                      onClick={() =>\n                        onEmployeeSelect(\n                          selectedEmployee === employee.id ? \"\" : employee.id\n                        )\n                      }\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center gap-2\">\n                            <span className=\"font-medium\">{employee.name}</span>\n                            <Badge variant=\"secondary\">\n                              {employee.shiftsPerMonth} {t(\"employees.shifts\")}\n                            </Badge>\n                          </div>\n                          {employee.tags.length > 0 && (\n                            <div className=\"flex flex-wrap gap-1 mt-1\">\n                              {employee.tags.map((tag) => (\n                                <Badge\n                                  key={t(tag)}\n                                  variant=\"outline\"\n                                  className=\"text-xs\"\n                                >\n                                  {t(tag)}\n                                </Badge>\n                              ))}\n                            </div>\n                          )}\n                          {selectedEmployee === employee.id && (\n                            <div className=\"mt-2 text-xs text-blue-600\">\n                              {t(\"employees.selectedDescription\")}\n                            </div>\n                          )}\n                        </div>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            startEditingEmployee(employee)\n                          }}\n                        >\n                          {t(\"employees.edit\")}\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n\n            {hasActiveSchedule && (\n              <Button\n                onClick={onAddEmployee}\n                variant=\"outline\"\n                className=\"w-full mt-3 flex-shrink-0\"\n              >\n                <Plus className=\"w-4 h-4 mr-2\" />\n                {t(\"employees.addEmployee\")}\n              </Button>\n            )}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1790, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/components/schedule/ConstraintsPanel.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Label } from \"@/components/ui/label\"\nimport { Input } from \"@/components/ui/input\"\nimport { ScheduleSettings } from \"@/types/schedule\"\nimport { useTranslations } from \"next-intl\"\n\ninterface ConstraintsPanelProps {\n  settings: ScheduleSettings\n  onSettingsChange: (settings: ScheduleSettings) => void\n}\n\nexport const ConstraintsPanel = ({\n  settings,\n  onSettingsChange,\n}: ConstraintsPanelProps) => {\n  const t = useTranslations()\n\n  const updateSetting = <K extends keyof ScheduleSettings>(\n    key: K,\n    value: ScheduleSettings[K]\n  ) => {\n    onSettingsChange({ ...settings, [key]: value })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{t(\"constraints.title\")}</CardTitle>\n        <p className=\"text-sm text-muted-foreground\">\n          {t(\"constraints.description\")}\n        </p>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {/* Basic Shift Configuration */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"shiftsPerDay\">\n              {t(\"constraints.shiftsPerDay\")}\n            </Label>\n            <Input\n              id=\"shiftsPerDay\"\n              type=\"number\"\n              min=\"1\"\n              max=\"3\"\n              value={settings.shiftsPerDay}\n              onChange={(e) =>\n                updateSetting(\n                  \"shiftsPerDay\",\n                  Number.parseInt(e.target.value) || 1\n                )\n              }\n            />\n            <p className=\"text-xs text-muted-foreground\">\n              {t(\"constraints.shiftsPerDayDescription\")}\n            </p>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"personsPerShift\">\n              {t(\"constraints.personsPerShift\")}\n            </Label>\n            <Input\n              id=\"personsPerShift\"\n              type=\"number\"\n              min=\"1\"\n              max=\"10\"\n              value={settings.personsPerShift}\n              onChange={(e) =>\n                updateSetting(\n                  \"personsPerShift\",\n                  Number.parseInt(e.target.value) || 1\n                )\n              }\n            />\n            <p className=\"text-xs text-muted-foreground\">\n              {t(\"constraints.personsPerShiftDescription\")}\n            </p>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"maxConsecutive\">\n              {t(\"constraints.maxConsecutiveShifts\")}\n            </Label>\n            <Input\n              id=\"maxConsecutive\"\n              type=\"number\"\n              min=\"1\"\n              max=\"7\"\n              value={settings.maxConsecutiveShifts}\n              onChange={(e) =>\n                updateSetting(\n                  \"maxConsecutiveShifts\",\n                  Number.parseInt(e.target.value) || 1\n                )\n              }\n            />\n            <p className=\"text-xs text-muted-foreground\">\n              {t(\"constraints.maxConsecutiveShiftsDescription\")}\n            </p>\n          </div>\n        </div>\n\n        {/* Rest and Recovery */}\n        <div className=\"border-t pt-6\">\n          <h3 className=\"text-lg font-medium mb-4\">\n            {t(\"constraints.restAndRecovery\")}\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"minRestDays\">\n                {t(\"constraints.minRestDaysBetweenShifts\")}\n              </Label>\n              <Input\n                id=\"minRestDays\"\n                type=\"number\"\n                min=\"0\"\n                max=\"3\"\n                value={settings.minRestDaysBetweenShifts}\n                onChange={(e) =>\n                  updateSetting(\n                    \"minRestDaysBetweenShifts\",\n                    Number.parseInt(e.target.value) || 0\n                  )\n                }\n              />\n              <p className=\"text-xs text-muted-foreground\">\n                {t(\"constraints.minRestDaysBetweenShiftsDescription\")}\n              </p>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label className=\"flex items-center gap-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={settings.weekendCoverageRequired}\n                  onChange={(e) =>\n                    updateSetting(\"weekendCoverageRequired\", e.target.checked)\n                  }\n                  className=\"rounded\"\n                />\n                {t(\"constraints.weekendCoverageRequired\")}\n              </Label>\n              <p className=\"text-xs text-muted-foreground\">\n                {t(\"constraints.weekendCoverageRequiredDescription\")}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Weekly Limits */}\n        <div className=\"border-t pt-6\">\n          <h3 className=\"text-lg font-medium mb-4\">\n            {t(\"constraints.weeklyLimits\")}\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"minShiftsPerWeek\">\n                {t(\"constraints.minShiftsPerWeek\")}\n              </Label>\n              <Input\n                id=\"minShiftsPerWeek\"\n                type=\"number\"\n                min=\"0\"\n                max=\"7\"\n                value={settings.minShiftsPerWeek}\n                onChange={(e) =>\n                  updateSetting(\n                    \"minShiftsPerWeek\",\n                    Number.parseInt(e.target.value) || 0\n                  )\n                }\n              />\n              <p className=\"text-xs text-muted-foreground\">\n                {t(\"constraints.minShiftsPerWeekDescription\")}\n              </p>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"maxShiftsPerWeek\">\n                {t(\"constraints.maxShiftsPerWeek\")}\n              </Label>\n              <Input\n                id=\"maxShiftsPerWeek\"\n                type=\"number\"\n                min=\"1\"\n                max=\"7\"\n                value={settings.maxShiftsPerWeek}\n                onChange={(e) =>\n                  updateSetting(\n                    \"maxShiftsPerWeek\",\n                    Number.parseInt(e.target.value) || 1\n                  )\n                }\n              />\n              <p className=\"text-xs text-muted-foreground\">\n                {t(\"constraints.maxShiftsPerWeekDescription\")}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Fairness and Distribution */}\n        <div className=\"border-t pt-6\">\n          <h3 className=\"text-lg font-medium mb-4\">\n            {t(\"constraints.fairnessAndDistribution\")}\n          </h3>\n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label className=\"flex items-center gap-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={settings.evenDistribution}\n                  onChange={(e) =>\n                    updateSetting(\"evenDistribution\", e.target.checked)\n                  }\n                  className=\"rounded\"\n                />\n                {t(\"constraints.evenShiftDistribution\")}\n              </Label>\n              <p className=\"text-xs text-muted-foreground\">\n                {t(\"constraints.evenShiftDistributionDescription\")}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Summary */}\n        <div className=\"border-t pt-6 bg-muted/50 p-4 rounded-lg\">\n          <h3 className=\"text-lg font-medium mb-2\">\n            {t(\"constraints.constraintSummary\")}\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n            <div>\n              <p>\n                <strong>{t(\"constraints.daily\")}:</strong>{\" \"}\n                {settings.shiftsPerDay} {t(\"constraints.shifts\")},{\" \"}\n                {settings.personsPerShift} {t(\"constraints.persons\")}{\" \"}\n                {t(\"constraints.each\")}\n              </p>\n              <p>\n                <strong>{t(\"constraints.consecutive\")}:</strong>{\" \"}\n                {t(\"constraints.max\")} {settings.maxConsecutiveShifts}{\" \"}\n                {t(\"constraints.inARow\")}\n              </p>\n              <p>\n                <strong>{t(\"constraints.rest\")}:</strong>{\" \"}\n                {settings.minRestDaysBetweenShifts}{\" \"}\n                {t(\"constraints.dayMinimum\")}\n              </p>\n            </div>\n            <div>\n              <p>\n                <strong>{t(\"constraints.weekly\")}:</strong>{\" \"}\n                {settings.minShiftsPerWeek}-{settings.maxShiftsPerWeek}{\" \"}\n                {t(\"constraints.shiftsPerPerson\")}\n              </p>\n              <p>\n                <strong>{t(\"constraints.weekend\")}:</strong>{\" \"}\n                {settings.weekendCoverageRequired\n                  ? t(\"constraints.required\")\n                  : t(\"constraints.optional\")}\n              </p>\n              <p>\n                <strong>{t(\"constraints.distribution\")}:</strong>{\" \"}\n                {settings.evenDistribution\n                  ? t(\"constraints.even\")\n                  : t(\"constraints.flexible\")}\n              </p>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2433, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/utils/exportUtils.ts"],"sourcesContent":["import { Employee, Schedule } from \"@/types/schedule\"\nimport { getDaysInMonth, getMonthName } from \"./dateUtils\"\n\nexport const exportScheduleAsCSV = (\n  schedule: Schedule,\n  employees: Employee[],\n  selectedMonth: number,\n  selectedYear: number,\n  t: (key: string) => string\n): void => {\n  const daysInMonth = getDaysInMonth(selectedMonth, selectedYear)\n  let csvContent = \"Date,Employee\\n\"\n\n  for (let day = 1; day <= daysInMonth; day++) {\n    const assignedEmployees = schedule[day] || []\n    if (assignedEmployees.length > 0) {\n      assignedEmployees.forEach((empId) => {\n        const employee = employees.find((emp) => emp.id === empId)\n        csvContent += `${selectedYear}-${(selectedMonth + 1)\n          .toString()\n          .padStart(2, \"0\")}-${day.toString().padStart(2, \"0\")},${\n          employee?.name || \"Unknown\"\n        }\\n`\n      })\n    } else {\n      csvContent += `${selectedYear}-${(selectedMonth + 1)\n        .toString()\n        .padStart(2, \"0\")}-${day.toString().padStart(2, \"0\")},No Assignment\\n`\n    }\n  }\n\n  const blob = new Blob([csvContent], { type: \"text/csv\" })\n  const url = window.URL.createObjectURL(blob)\n  const a = document.createElement(\"a\")\n  a.href = url\n  a.download = `schedule-${getMonthName(selectedMonth, t)}-${selectedYear}.csv`\n  a.click()\n  window.URL.revokeObjectURL(url)\n}\n\nexport const exportScheduleAsImage = (\n  schedule: Schedule,\n  employees: Employee[],\n  selectedMonth: number,\n  selectedYear: number,\n  t: (key: string) => string\n): void => {\n  const canvas = document.createElement(\"canvas\")\n  const ctx = canvas.getContext(\"2d\")\n  if (!ctx) return\n\n  const daysInMonth = getDaysInMonth(selectedMonth, selectedYear)\n  const cellWidth = 120\n  const cellHeight = 40\n  const headerHeight = 60\n\n  canvas.width = Math.max(800, cellWidth * 7)\n  canvas.height = headerHeight + Math.ceil(daysInMonth / 7) * cellHeight\n\n  // Set background\n  ctx.fillStyle = \"#ffffff\"\n  ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n  // Draw title\n  ctx.fillStyle = \"#000000\"\n  ctx.font = \"bold 24px Arial\"\n  ctx.textAlign = \"center\"\n  ctx.fillText(\n    `${getMonthName(selectedMonth, t)} ${selectedYear} Schedule`,\n    canvas.width / 2,\n    30\n  )\n\n  // Draw calendar grid\n  ctx.font = \"14px Arial\"\n  ctx.textAlign = \"left\"\n\n  for (let day = 1; day <= daysInMonth; day++) {\n    const row = Math.floor((day - 1) / 7)\n    const col = (day - 1) % 7\n    const x = col * cellWidth\n    const y = headerHeight + row * cellHeight\n\n    // Draw cell border\n    ctx.strokeStyle = \"#cccccc\"\n    ctx.strokeRect(x, y, cellWidth, cellHeight)\n\n    // Draw day number\n    ctx.fillStyle = \"#000000\"\n    ctx.fillText(day.toString(), x + 5, y + 20)\n\n    // Draw assigned employee\n    const assignedEmployees = schedule[day] || []\n    if (assignedEmployees.length > 0) {\n      const employee = employees.find((emp) => emp.id === assignedEmployees[0])\n      ctx.fillStyle = \"#0066cc\"\n      ctx.fillText(employee?.name || \"Unknown\", x + 5, y + 35)\n    }\n  }\n\n  // Convert to blob and download\n  canvas.toBlob((blob) => {\n    if (blob) {\n      const url = window.URL.createObjectURL(blob)\n      const a = document.createElement(\"a\")\n      a.href = url\n      a.download = `schedule-${getMonthName(\n        selectedMonth,\n        t\n      )}-${selectedYear}.png`\n      a.click()\n      window.URL.revokeObjectURL(url)\n    }\n  })\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2526, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/components/schedule/ScheduleView.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Employee, Schedule, Constraint } from \"@/types/schedule\"\nimport { FileSpreadsheet, FileImage, ChevronDown } from \"lucide-react\"\nimport { exportScheduleAsCSV, exportScheduleAsImage } from \"@/utils/exportUtils\"\nimport { toast } from \"sonner\"\nimport { useState, useEffect, useRef } from \"react\"\nimport { useTranslations } from \"next-intl\"\nimport {\n  getDaysInMonth,\n  getFirstDayOfMonth,\n  getMonthName,\n} from \"@/utils/dateUtils\"\n\ninterface ScheduleViewProps {\n  schedule: Schedule\n  employees: Employee[]\n  selectedMonth: number\n  selectedYear: number\n  hasActiveSchedule: boolean\n  constraints?: Constraint[]\n  selectedEmployee?: string\n  onSetConstraint?: (\n    employeeId: string,\n    type: \"avoid\" | \"prefer\",\n    date: number\n  ) => void\n  onRemoveConstraint?: (employeeId: string, date: number) => void\n  onGenerateSchedule?: () => void\n  isGenerating?: boolean\n}\n\nexport const ScheduleView = ({\n  schedule,\n  employees,\n  selectedMonth,\n  selectedYear,\n  hasActiveSchedule,\n  constraints = [],\n  selectedEmployee,\n  onSetConstraint,\n  onRemoveConstraint,\n  onGenerateSchedule,\n  isGenerating = false,\n}: ScheduleViewProps) => {\n  const [showExportDropdown, setShowExportDropdown] = useState(false)\n  const dropdownRef = useRef<HTMLDivElement>(null)\n  const t = useTranslations()\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        dropdownRef.current &&\n        !dropdownRef.current.contains(event.target as Node)\n      ) {\n        setShowExportDropdown(false)\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside)\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside)\n    }\n  }, [])\n\n  const handleExportCSV = () => {\n    if (Object.keys(schedule).length === 0) {\n      toast.error(t(\"toast.noSchedule\"), {\n        description: t(\"toast.pleaseGenerateFirst\"),\n      })\n      return\n    }\n\n    try {\n      exportScheduleAsCSV(schedule, employees, selectedMonth, selectedYear, t)\n      toast.success(t(\"toast.csvExported\"), {\n        description: t(\"toast.csvExportedDescription\"),\n      })\n    } catch {\n      toast.error(t(\"toast.exportFailed\"), {\n        description: t(\"toast.csvExportFailedDescription\"),\n      })\n    }\n    setShowExportDropdown(false)\n  }\n\n  const handleExportImage = () => {\n    if (Object.keys(schedule).length === 0) {\n      toast.error(t(\"toast.noSchedule\"), {\n        description: t(\"toast.pleaseGenerateFirst\"),\n      })\n      return\n    }\n\n    try {\n      exportScheduleAsImage(schedule, employees, selectedMonth, selectedYear, t)\n      toast.success(t(\"toast.imageExported\"), {\n        description: t(\"toast.imageExportedDescription\"),\n      })\n    } catch {\n      toast.error(t(\"toast.exportFailed\"), {\n        description: t(\"toast.imageExportFailedDescription\"),\n      })\n    }\n    setShowExportDropdown(false)\n  }\n  const handleDayClick = (day: number) => {\n    if (!selectedEmployee || !onSetConstraint || !onRemoveConstraint) return\n\n    // Find existing constraint for this employee and day\n    const existingConstraint = constraints.find(\n      (c) => c.employeeId === selectedEmployee && c.date === day\n    )\n\n    // 3-state cycle: normal → prefer → avoid → normal\n    if (!existingConstraint) {\n      // Currently normal → change to prefer\n      onSetConstraint(selectedEmployee, \"prefer\", day)\n    } else if (existingConstraint.type === \"prefer\") {\n      // Currently prefer → change to avoid\n      onSetConstraint(selectedEmployee, \"avoid\", day)\n    } else if (existingConstraint.type === \"avoid\") {\n      // Currently avoid → change to normal (remove constraint)\n      onRemoveConstraint(selectedEmployee, day)\n    }\n  }\n\n  const renderScheduleGrid = () => {\n    if (!selectedMonth || !selectedYear) return null\n\n    const firstDay = getFirstDayOfMonth(selectedMonth, selectedYear)\n    const daysInMonth = getDaysInMonth(selectedMonth, selectedYear)\n    const cells = []\n\n    // Empty cells for days before month starts\n    for (let i = 0; i < firstDay; i++) {\n      cells.push(<div key={`empty-${i}`} className=\"p-2 h-16\"></div>)\n    }\n\n    // Days of the month\n    for (let day = 1; day <= daysInMonth; day++) {\n      const assignedEmployees = schedule[day] || []\n\n      // Find existing constraint for selected employee and day\n      const existingConstraint = selectedEmployee\n        ? constraints.find(\n            (c) => c.employeeId === selectedEmployee && c.date === day\n          )\n        : null\n\n      // Check if selected employee is scheduled on this day\n      const isSelectedEmployeeScheduled =\n        selectedEmployee && assignedEmployees.includes(selectedEmployee)\n\n      let cellClass = \"p-2 h-16 border rounded-lg \"\n\n      // Apply constraint styling if selectedEmployee is set\n      if (selectedEmployee) {\n        cellClass += \"cursor-pointer transition-colors \"\n\n        // If selected employee is scheduled, add special highlighting\n        if (isSelectedEmployeeScheduled) {\n          if (existingConstraint?.type === \"prefer\") {\n            cellClass +=\n              \"bg-green-200 border-green-400 hover:bg-green-300 ring-2 ring-blue-400\"\n          } else if (existingConstraint?.type === \"avoid\") {\n            cellClass +=\n              \"bg-red-200 border-red-400 hover:bg-red-300 ring-2 ring-blue-400\"\n          } else {\n            cellClass +=\n              \"bg-blue-100 border-blue-400 hover:bg-blue-200 ring-2 ring-blue-400\"\n          }\n        } else {\n          // Normal constraint styling when employee is not scheduled\n          if (existingConstraint?.type === \"prefer\") {\n            cellClass += \"bg-green-100 border-green-300 hover:bg-green-200\"\n          } else if (existingConstraint?.type === \"avoid\") {\n            cellClass += \"bg-red-100 border-red-300 hover:bg-red-200\"\n          } else {\n            cellClass += \"hover:border-blue-300 hover:bg-blue-50\"\n          }\n        }\n      }\n\n      cells.push(\n        <div\n          key={day}\n          className={cellClass}\n          onClick={() => selectedEmployee && handleDayClick(day)}\n        >\n          <div className=\"text-sm font-medium\">{day}</div>\n          {assignedEmployees.map((empId) => {\n            const employee = employees.find((emp) => emp.id === empId)\n            const isCurrentSelectedEmployee = selectedEmployee === empId\n            return (\n              <div\n                key={empId}\n                className={`text-xs truncate ${\n                  isCurrentSelectedEmployee\n                    ? \"text-blue-800 font-semibold bg-blue-50 rounded border border-blue-200\"\n                    : \"text-blue-600\"\n                }`}\n                title={employee?.name}\n              >\n                {employee?.name}\n              </div>\n            )\n          })}\n        </div>\n      )\n    }\n\n    return cells\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center justify-between\">\n          {t(\"schedule.title\")}\n          <div className=\"flex gap-2\">\n            {onGenerateSchedule && (\n              <Button\n                onClick={onGenerateSchedule}\n                disabled={employees.length === 0 || isGenerating}\n                size=\"sm\"\n              >\n                {isGenerating\n                  ? t(\"schedule.generating\")\n                  : t(\"schedule.generateButton\")}\n              </Button>\n            )}\n            {Object.keys(schedule).length > 0 && (\n              <div className=\"relative\" ref={dropdownRef}>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setShowExportDropdown(!showExportDropdown)}\n                  className=\"flex items-center gap-2\"\n                >\n                  {t(\"schedule.export\")}\n                  <ChevronDown className=\"w-4 h-4\" />\n                </Button>\n                {showExportDropdown && (\n                  <div className=\"absolute right-0 top-full mt-1 w-40 bg-white border border-gray-200 rounded-md shadow-lg z-10\">\n                    <button\n                      onClick={handleExportCSV}\n                      className=\"w-full px-3 py-2 text-left text-sm hover:bg-gray-50 flex items-center gap-2\"\n                    >\n                      <FileSpreadsheet className=\"w-4 h-4\" />\n                      {t(\"schedule.exportCSV\")}\n                    </button>\n                    <button\n                      onClick={handleExportImage}\n                      className=\"w-full px-3 py-2 text-left text-sm hover:bg-gray-50 flex items-center gap-2\"\n                    >\n                      <FileImage className=\"w-4 h-4\" />\n                      {t(\"schedule.exportImage\")}\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </CardTitle>\n        {selectedEmployee && (\n          <p className=\"text-sm text-muted-foreground\">\n            {t(\"schedule.settingPreferencesFor\")}{\" \"}\n            <strong>\n              {employees.find((emp) => emp.id === selectedEmployee)?.name}\n            </strong>\n          </p>\n        )}\n      </CardHeader>\n      <CardContent>\n        {!hasActiveSchedule && (\n          <p className=\"text-muted-foreground\">\n            {t(\"schedule.noActiveSchedule\")}\n          </p>\n        )}\n\n        {hasActiveSchedule && (\n          <div>\n            <h3 className=\"font-medium mb-4\">\n              {t(\"schedule.monthSchedule\", {\n                month: getMonthName(selectedMonth, t),\n                year: selectedYear,\n              })}\n            </h3>\n            <div className=\"grid grid-cols-7 gap-2\">\n              {[\n                t(\"days.0\"),\n                t(\"days.1\"),\n                t(\"days.2\"),\n                t(\"days.3\"),\n                t(\"days.4\"),\n                t(\"days.5\"),\n                t(\"days.6\"),\n              ].map((day) => (\n                <div\n                  key={day}\n                  className=\"p-2 text-center font-medium bg-muted rounded\"\n                >\n                  {day}\n                </div>\n              ))}\n              {renderScheduleGrid()}\n            </div>\n\n            {selectedEmployee && (\n              <div className=\"mt-4 p-3 bg-blue-50 rounded-lg\">\n                <div className=\"text-sm font-medium text-blue-800 mb-2\">\n                  {t(\"schedule.clickToSetPreferences\")}\n                </div>\n                <div className=\"space-y-1 text-xs\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-4 h-4 bg-green-100 border border-green-300 rounded\"></div>\n                    <span>{t(\"schedule.preferredDays\")}</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-4 h-4 bg-red-100 border border-red-300 rounded\"></div>\n                    <span>{t(\"schedule.avoidDays\")}</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-4 h-4 bg-white border border-gray-300 rounded\"></div>\n                    <span>{t(\"schedule.normalDays\")}</span>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3018, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/components/LanguageSwitcher.tsx"],"sourcesContent":["\"use client\"\n\nimport React from \"react\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport { useLocale } from \"@/contexts/LocaleContext\"\nimport { Globe } from \"lucide-react\"\n\nconst languages = {\n  en: { name: \"English\", flag: \"🇺🇸\" },\n  \"zh-TW\": { name: \"繁體中文\", flag: \"🇹🇼\" },\n}\n\nexport function LanguageSwitcher() {\n  const { locale, setLocale } = useLocale()\n\n  const handleLanguageChange = (value: string) => {\n    setLocale(value as \"en\" | \"zh-TW\")\n  }\n\n  return (\n    <Select value={locale} onValueChange={handleLanguageChange}>\n      <SelectTrigger className=\"w-10 h-10 p-0 border-none hover:bg-muted/50 rounded-md\">\n        <SelectValue>\n          <Globe className=\"h-5 w-5\" />\n        </SelectValue>\n      </SelectTrigger>\n      <SelectContent>\n        <SelectItem value=\"en\">\n          <span className=\"flex items-center gap-2\">\n            <span>{languages.en.flag}</span>\n            <span>{languages.en.name}</span>\n          </span>\n        </SelectItem>\n        <SelectItem value=\"zh-TW\">\n          <span className=\"flex items-center gap-2\">\n            <span>{languages[\"zh-TW\"].flag}</span>\n            <span>{languages[\"zh-TW\"].name}</span>\n          </span>\n        </SelectItem>\n      </SelectContent>\n    </Select>\n  )\n}\n"],"names":[],"mappings":";;;;AAGA;AAOA;AACA;;;AAXA;;;;AAaA,MAAM,YAAY;IAChB,IAAI;QAAE,MAAM;QAAW,MAAM;IAAO;IACpC,SAAS;QAAE,MAAM;QAAQ,MAAM;IAAO;AACxC;AAEO,SAAS;;IACd,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,YAAS,AAAD;IAEtC,MAAM,uBAAuB,CAAC;QAC5B,UAAU;IACZ;IAEA,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,OAAO;QAAQ,eAAe;;0BACpC,6LAAC,qIAAA,CAAA,gBAAa;gBAAC,WAAU;0BACvB,cAAA,6LAAC,qIAAA,CAAA,cAAW;8BACV,cAAA,6LAAC,uMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAGrB,6LAAC,qIAAA,CAAA,gBAAa;;kCACZ,6LAAC,qIAAA,CAAA,aAAU;wBAAC,OAAM;kCAChB,cAAA,6LAAC;4BAAK,WAAU;;8CACd,6LAAC;8CAAM,UAAU,EAAE,CAAC,IAAI;;;;;;8CACxB,6LAAC;8CAAM,UAAU,EAAE,CAAC,IAAI;;;;;;;;;;;;;;;;;kCAG5B,6LAAC,qIAAA,CAAA,aAAU;wBAAC,OAAM;kCAChB,cAAA,6LAAC;4BAAK,WAAU;;8CACd,6LAAC;8CAAM,SAAS,CAAC,QAAQ,CAAC,IAAI;;;;;;8CAC9B,6LAAC;8CAAM,SAAS,CAAC,QAAQ,CAAC,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM1C;GA9BgB;;QACgB,oIAAA,CAAA,YAAS;;;KADzB","debugId":null}},
    {"offset": {"line": 3163, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/hooks/useScheduleData.ts"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport {\n  ScheduleData,\n  ScheduleSettings,\n  ScheduleItem,\n  Employee,\n  Constraint,\n  Schedule,\n} from \"@/types/schedule\"\n\nconst DEFAULT_SETTINGS: ScheduleSettings = {\n  shiftsPerDay: 1,\n  personsPerShift: 1,\n  maxConsecutiveShifts: 3,\n  minRestDaysBetweenShifts: 0,\n  weekendCoverageRequired: true,\n  maxShiftsPerWeek: 5,\n  minShiftsPerWeek: 1,\n  evenDistribution: true,\n}\n\nexport const useScheduleData = () => {\n  const [schedules, setSchedules] = useState<ScheduleItem[]>([])\n  const [activeScheduleId, setActiveScheduleId] = useState<string | null>(null)\n  const [settings, setSettings] = useState<ScheduleSettings>(DEFAULT_SETTINGS)\n  const [loaded, setLoaded] = useState<boolean>(false)\n\n  useEffect(() => {\n    loadFromLocalStorage()\n    setLoaded(true)\n  }, [])\n\n  // Save to localStorage whenever data changes\n  useEffect(() => {\n    if(loaded === false) return\n    const data: ScheduleData = {\n      schedules,\n      settings,\n    }\n    localStorage.setItem(\"scheduleData\", JSON.stringify(data))\n  }, [schedules, settings, loaded])\n\n  const loadFromLocalStorage = () => {\n    const saved = localStorage.getItem(\"scheduleData\")\n    if (saved) {\n      try {\n        const data = JSON.parse(saved)\n        setSchedules(\n          (data.schedules || []).map((schedule: ScheduleItem) => ({\n            ...schedule,\n            createdAt: new Date(schedule.createdAt),\n          }))\n        )\n        setSettings({ ...DEFAULT_SETTINGS, ...data.settings })\n      } catch (error) {\n        console.error(\"Error loading from localStorage:\", error)\n      }\n    }\n  }\n\n  const addSchedule = (\n    month: number,\n    year: number,\n    importFromScheduleId?: string\n  ): string => {\n    // Check for duplicate\n    const exists = schedules.some((s) => s.month === month && s.year === year)\n    if (exists) {\n      throw new Error(`Schedule for ${month}/${year} already exists`)\n    }\n\n    // Get employees to import if specified\n    let employeesToImport: Employee[] = []\n    if (importFromScheduleId) {\n      const sourceSchedule = schedules.find(\n        (s) => s.id === importFromScheduleId\n      )\n      if (sourceSchedule && sourceSchedule.employees.length > 0) {\n        // Create independent copies of employees with new IDs\n        employeesToImport = sourceSchedule.employees.map((employee) => ({\n          ...employee,\n          id: uuidv4(),\n        }))\n      }\n    }\n\n    const newSchedule: ScheduleItem = {\n      id: uuidv4(),\n      month,\n      year,\n      employees: employeesToImport,\n      constraints: [],\n      schedule: {},\n      createdAt: new Date(),\n      isGenerated: false,\n    }\n\n    setSchedules((prev) => [...prev, newSchedule])\n    setActiveScheduleId(newSchedule.id)\n    return newSchedule.id\n  }\n\n  const deleteSchedule = (scheduleId: string) => {\n    setSchedules((prev) => prev.filter((s) => s.id !== scheduleId))\n    if (activeScheduleId === scheduleId) {\n      setActiveScheduleId(null)\n    }\n  }\n\n  const updateSchedule = (\n    scheduleId: string,\n    updates: Partial<ScheduleItem>\n  ) => {\n    setSchedules((prev) =>\n      prev.map((schedule) =>\n        schedule.id === scheduleId ? { ...schedule, ...updates } : schedule\n      )\n    )\n  }\n\n  const getActiveSchedule = (): ScheduleItem | null => {\n    return schedules.find((s) => s.id === activeScheduleId) || null\n  }\n\n  // Derived values for active schedule\n  const activeSchedule = getActiveSchedule()\n  const selectedMonth = activeSchedule?.month || 0\n  const selectedYear = activeSchedule?.year || 0\n  const employees = activeSchedule?.employees || []\n  const constraints = activeSchedule?.constraints || []\n  const schedule = activeSchedule?.schedule || {}\n\n  const setEmployees = (employees: Employee[]) => {\n    if (activeScheduleId) {\n      updateSchedule(activeScheduleId, { employees })\n    }\n  }\n\n  const setConstraints = (constraints: Constraint[]) => {\n    if (activeScheduleId) {\n      updateSchedule(activeScheduleId, { constraints })\n    }\n  }\n\n  const setSchedule = (schedule: Schedule) => {\n    if (activeScheduleId) {\n      updateSchedule(activeScheduleId, {\n        schedule,\n        isGenerated: Object.keys(schedule).length > 0,\n      })\n    }\n  }\n\n  return {\n    // Schedule history management\n    schedules,\n    activeScheduleId,\n    setActiveScheduleId,\n    addSchedule,\n    deleteSchedule,\n    updateSchedule,\n    getActiveSchedule,\n\n    // Active schedule data\n    selectedMonth,\n    selectedYear,\n    employees,\n    setEmployees,\n    constraints,\n    setConstraints,\n    schedule,\n    setSchedule,\n\n    // Global settings\n    settings,\n    setSettings,\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;;AAUA,MAAM,mBAAqC;IACzC,cAAc;IACd,iBAAiB;IACjB,sBAAsB;IACtB,0BAA0B;IAC1B,yBAAyB;IACzB,kBAAkB;IAClB,kBAAkB;IAClB,kBAAkB;AACpB;AAEO,MAAM,kBAAkB;;IAC7B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IAC7D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACxE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB;IAC3D,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAE9C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR;YACA,UAAU;QACZ;oCAAG,EAAE;IAEL,6CAA6C;IAC7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,IAAG,WAAW,OAAO;YACrB,MAAM,OAAqB;gBACzB;gBACA;YACF;YACA,aAAa,OAAO,CAAC,gBAAgB,KAAK,SAAS,CAAC;QACtD;oCAAG;QAAC;QAAW;QAAU;KAAO;IAEhC,MAAM,uBAAuB;QAC3B,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,OAAO;YACT,IAAI;gBACF,MAAM,OAAO,KAAK,KAAK,CAAC;gBACxB,aACE,CAAC,KAAK,SAAS,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,WAA2B,CAAC;wBACtD,GAAG,QAAQ;wBACX,WAAW,IAAI,KAAK,SAAS,SAAS;oBACxC,CAAC;gBAEH,YAAY;oBAAE,GAAG,gBAAgB;oBAAE,GAAG,KAAK,QAAQ;gBAAC;YACtD,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,oCAAoC;YACpD;QACF;IACF;IAEA,MAAM,cAAc,CAClB,OACA,MACA;QAEA,sBAAsB;QACtB,MAAM,SAAS,UAAU,IAAI,CAAC,CAAC,IAAM,EAAE,KAAK,KAAK,SAAS,EAAE,IAAI,KAAK;QACrE,IAAI,QAAQ;YACV,MAAM,IAAI,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,EAAE,KAAK,eAAe,CAAC;QAChE;QAEA,uCAAuC;QACvC,IAAI,oBAAgC,EAAE;QACtC,IAAI,sBAAsB;YACxB,MAAM,iBAAiB,UAAU,IAAI,CACnC,CAAC,IAAM,EAAE,EAAE,KAAK;YAElB,IAAI,kBAAkB,eAAe,SAAS,CAAC,MAAM,GAAG,GAAG;gBACzD,sDAAsD;gBACtD,oBAAoB,eAAe,SAAS,CAAC,GAAG,CAAC,CAAC,WAAa,CAAC;wBAC9D,GAAG,QAAQ;wBACX,IAAI,CAAA,GAAA,wLAAA,CAAA,KAAM,AAAD;oBACX,CAAC;YACH;QACF;QAEA,MAAM,cAA4B;YAChC,IAAI,CAAA,GAAA,wLAAA,CAAA,KAAM,AAAD;YACT;YACA;YACA,WAAW;YACX,aAAa,EAAE;YACf,UAAU,CAAC;YACX,WAAW,IAAI;YACf,aAAa;QACf;QAEA,aAAa,CAAC,OAAS;mBAAI;gBAAM;aAAY;QAC7C,oBAAoB,YAAY,EAAE;QAClC,OAAO,YAAY,EAAE;IACvB;IAEA,MAAM,iBAAiB,CAAC;QACtB,aAAa,CAAC,OAAS,KAAK,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;QACnD,IAAI,qBAAqB,YAAY;YACnC,oBAAoB;QACtB;IACF;IAEA,MAAM,iBAAiB,CACrB,YACA;QAEA,aAAa,CAAC,OACZ,KAAK,GAAG,CAAC,CAAC,WACR,SAAS,EAAE,KAAK,aAAa;oBAAE,GAAG,QAAQ;oBAAE,GAAG,OAAO;gBAAC,IAAI;IAGjE;IAEA,MAAM,oBAAoB;QACxB,OAAO,UAAU,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,qBAAqB;IAC7D;IAEA,qCAAqC;IACrC,MAAM,iBAAiB;IACvB,MAAM,gBAAgB,gBAAgB,SAAS;IAC/C,MAAM,eAAe,gBAAgB,QAAQ;IAC7C,MAAM,YAAY,gBAAgB,aAAa,EAAE;IACjD,MAAM,cAAc,gBAAgB,eAAe,EAAE;IACrD,MAAM,WAAW,gBAAgB,YAAY,CAAC;IAE9C,MAAM,eAAe,CAAC;QACpB,IAAI,kBAAkB;YACpB,eAAe,kBAAkB;gBAAE;YAAU;QAC/C;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,IAAI,kBAAkB;YACpB,eAAe,kBAAkB;gBAAE;YAAY;QACjD;IACF;IAEA,MAAM,cAAc,CAAC;QACnB,IAAI,kBAAkB;YACpB,eAAe,kBAAkB;gBAC/B;gBACA,aAAa,OAAO,IAAI,CAAC,UAAU,MAAM,GAAG;YAC9C;QACF;IACF;IAEA,OAAO;QACL,8BAA8B;QAC9B;QACA;QACA;QACA;QACA;QACA;QACA;QAEA,uBAAuB;QACvB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA,kBAAkB;QAClB;QACA;IACF;AACF;GA5Ja","debugId":null}},
    {"offset": {"line": 3338, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/hooks/useEmployeeManagement.ts"],"sourcesContent":["import { Employee, Constraint, Schedule } from \"@/types/schedule\"\nimport { toast } from \"sonner\"\nimport { v4 as uuidv4 } from \"uuid\"\n\nexport const useEmployeeManagement = (\n  employees: Employee[],\n  setEmployees: (employees: Employee[]) => void,\n  constraints: Constraint[],\n  setConstraints: (constraints: Constraint[]) => void,\n  schedule: Schedule,\n  setSchedule: (schedule: Schedule) => void,\n  t?: (key: string, params?: Record<string, string | number>) => string\n) => {\n  const addEmployee = () => {\n    const newEmployeeText = t ? t(\"employees.newEmployee\") : \"New Employee\"\n\n    const nextNumber = employees.length + 1\n    const paddedNumber = nextNumber.toString().padStart(3, \"0\")\n\n    const newEmployee: Employee = {\n      id: uuidv4(),\n      name: `${newEmployeeText} ${paddedNumber}`,\n      shiftsPerMonth: 8,\n      tags: [],\n    }\n\n    setEmployees([...employees, newEmployee])\n    if (t) {\n      toast.success(t(\"toast.employeeAdded\"), {\n        description: t(\"toast.employeeAddedDescription\", {\n          name: newEmployee.name,\n        }),\n      })\n    } else {\n      toast.success(\"Employee added\", {\n        description: `${newEmployee.name} has been added to the schedule.`,\n      })\n    }\n  }\n\n  const removeEmployee = (id: string) => {\n    setEmployees(employees.filter((emp) => emp.id !== id))\n    setConstraints(\n      constraints.filter((constraint) => constraint.employeeId !== id)\n    )\n    // Remove from schedule\n    const newSchedule = { ...schedule }\n    Object.keys(newSchedule).forEach((date) => {\n      newSchedule[Number.parseInt(date)] = newSchedule[\n        Number.parseInt(date)\n      ].filter((empId: string) => empId !== id)\n    })\n    setSchedule(newSchedule)\n  }\n\n  const updateEmployee = (id: string, updates: Partial<Employee>) => {\n    setEmployees(\n      employees.map((emp) => (emp.id === id ? { ...emp, ...updates } : emp))\n    )\n    if (t) {\n      toast.success(t(\"toast.employeeUpdated\"), {\n        description: t(\"toast.employeeUpdatedDescription\"),\n      })\n    } else {\n      toast.success(\"Employee updated\", {\n        description: \"Employee information has been saved.\",\n      })\n    }\n  }\n\n  const toggleEmployeeTag = (employeeId: string, tag: string) => {\n    setEmployees(\n      employees.map((emp) => {\n        if (emp.id === employeeId) {\n          const hasTag = emp.tags.includes(tag)\n          return {\n            ...emp,\n            tags: hasTag\n              ? emp.tags.filter((t) => t !== tag)\n              : [...emp.tags, tag],\n          }\n        }\n        return emp\n      })\n    )\n  }\n\n  return {\n    addEmployee,\n    removeEmployee,\n    updateEmployee,\n    toggleEmployeeTag,\n  }\n}\n"],"names":[],"mappings":";;;AACA;AACA;;;AAEO,MAAM,wBAAwB,CACnC,WACA,cACA,aACA,gBACA,UACA,aACA;IAEA,MAAM,cAAc;QAClB,MAAM,kBAAkB,IAAI,EAAE,2BAA2B;QAEzD,MAAM,aAAa,UAAU,MAAM,GAAG;QACtC,MAAM,eAAe,WAAW,QAAQ,GAAG,QAAQ,CAAC,GAAG;QAEvD,MAAM,cAAwB;YAC5B,IAAI,CAAA,GAAA,wLAAA,CAAA,KAAM,AAAD;YACT,MAAM,GAAG,gBAAgB,CAAC,EAAE,cAAc;YAC1C,gBAAgB;YAChB,MAAM,EAAE;QACV;QAEA,aAAa;eAAI;YAAW;SAAY;QACxC,IAAI,GAAG;YACL,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC,EAAE,wBAAwB;gBACtC,aAAa,EAAE,kCAAkC;oBAC/C,MAAM,YAAY,IAAI;gBACxB;YACF;QACF,OAAO;YACL,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC,kBAAkB;gBAC9B,aAAa,GAAG,YAAY,IAAI,CAAC,gCAAgC,CAAC;YACpE;QACF;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,aAAa,UAAU,MAAM,CAAC,CAAC,MAAQ,IAAI,EAAE,KAAK;QAClD,eACE,YAAY,MAAM,CAAC,CAAC,aAAe,WAAW,UAAU,KAAK;QAE/D,uBAAuB;QACvB,MAAM,cAAc;YAAE,GAAG,QAAQ;QAAC;QAClC,OAAO,IAAI,CAAC,aAAa,OAAO,CAAC,CAAC;YAChC,WAAW,CAAC,OAAO,QAAQ,CAAC,MAAM,GAAG,WAAW,CAC9C,OAAO,QAAQ,CAAC,MACjB,CAAC,MAAM,CAAC,CAAC,QAAkB,UAAU;QACxC;QACA,YAAY;IACd;IAEA,MAAM,iBAAiB,CAAC,IAAY;QAClC,aACE,UAAU,GAAG,CAAC,CAAC,MAAS,IAAI,EAAE,KAAK,KAAK;gBAAE,GAAG,GAAG;gBAAE,GAAG,OAAO;YAAC,IAAI;QAEnE,IAAI,GAAG;YACL,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC,EAAE,0BAA0B;gBACxC,aAAa,EAAE;YACjB;QACF,OAAO;YACL,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC,oBAAoB;gBAChC,aAAa;YACf;QACF;IACF;IAEA,MAAM,oBAAoB,CAAC,YAAoB;QAC7C,aACE,UAAU,GAAG,CAAC,CAAC;YACb,IAAI,IAAI,EAAE,KAAK,YAAY;gBACzB,MAAM,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC;gBACjC,OAAO;oBACL,GAAG,GAAG;oBACN,MAAM,SACF,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,IAAM,MAAM,OAC7B;2BAAI,IAAI,IAAI;wBAAE;qBAAI;gBACxB;YACF;YACA,OAAO;QACT;IAEJ;IAEA,OAAO;QACL;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 3430, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/hooks/useConstraintManagement.ts"],"sourcesContent":["import { Constraint } from \"@/types/schedule\"\nimport { v4 as uuidv4 } from \"uuid\"\n\nexport const useConstraintManagement = (\n  constraints: Constraint[],\n  setConstraints: (constraints: Constraint[]) => void\n) => {\n  const getConstraintsForEmployee = (employeeId: string) => {\n    return constraints.filter(\n      (constraint) => constraint.employeeId === employeeId\n    )\n  }\n\n  const getConstraintForDate = (employeeId: string, date: number) => {\n    return constraints.find(\n      (constraint) =>\n        constraint.employeeId === employeeId && constraint.date === date\n    )\n  }\n\n  const removeConstraint = (employeeId: string, date: number) => {\n    setConstraints(\n      constraints.filter(\n        (constraint) =>\n          !(constraint.employeeId === employeeId && constraint.date === date)\n      )\n    )\n  }\n\n  const setConstraint = (\n    employeeId: string,\n    type: \"avoid\" | \"prefer\",\n    date: number\n  ) => {\n    // First remove any existing constraint for this employee and date\n    const updatedConstraints = constraints.filter(\n      (constraint) =>\n        !(constraint.employeeId === employeeId && constraint.date === date)\n    )\n\n    // Then add the new constraint\n    const newConstraint: Constraint = {\n      id: uuidv4(),\n      employeeId,\n      type,\n      date,\n    }\n\n    setConstraints([...updatedConstraints, newConstraint])\n  }\n\n  return {\n    getConstraintsForEmployee,\n    getConstraintForDate,\n    removeConstraint,\n    setConstraint,\n  }\n}\n"],"names":[],"mappings":";;;AACA;;AAEO,MAAM,0BAA0B,CACrC,aACA;IAEA,MAAM,4BAA4B,CAAC;QACjC,OAAO,YAAY,MAAM,CACvB,CAAC,aAAe,WAAW,UAAU,KAAK;IAE9C;IAEA,MAAM,uBAAuB,CAAC,YAAoB;QAChD,OAAO,YAAY,IAAI,CACrB,CAAC,aACC,WAAW,UAAU,KAAK,cAAc,WAAW,IAAI,KAAK;IAElE;IAEA,MAAM,mBAAmB,CAAC,YAAoB;QAC5C,eACE,YAAY,MAAM,CAChB,CAAC,aACC,CAAC,CAAC,WAAW,UAAU,KAAK,cAAc,WAAW,IAAI,KAAK,IAAI;IAG1E;IAEA,MAAM,gBAAgB,CACpB,YACA,MACA;QAEA,kEAAkE;QAClE,MAAM,qBAAqB,YAAY,MAAM,CAC3C,CAAC,aACC,CAAC,CAAC,WAAW,UAAU,KAAK,cAAc,WAAW,IAAI,KAAK,IAAI;QAGtE,8BAA8B;QAC9B,MAAM,gBAA4B;YAChC,IAAI,CAAA,GAAA,wLAAA,CAAA,KAAM,AAAD;YACT;YACA;YACA;QACF;QAEA,eAAe;eAAI;YAAoB;SAAc;IACvD;IAEA,OAAO;QACL;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 3476, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/utils/scheduleUtils.ts"],"sourcesContent":["import {\n  Employee,\n  Constraint,\n  Schedule,\n  ScheduleSettings,\n  OptimizedSchedule,\n} from \"@/types/schedule\"\nimport { getDaysInMonth, isWeekend } from \"./dateUtils\"\nimport simulatedAnnealing from \"simulated-annealing\"\nimport { ScheduleCostCalculator } from \"./costCalculator\"\n\n// Helper function to generate random integer from [0, x)\nconst randint = (x: number): number => {\n  return Math.floor(Math.random() * x)\n}\n\n// Conversion functions between Schedule and OptimizedSchedule\nconst optimizedToSchedule = (\n  optimized: OptimizedSchedule,\n  employees: Employee[],\n  settings: ScheduleSettings,\n  daysInMonth: number\n): Schedule => {\n  const { shiftsPerDay, personsPerShift } = settings\n  const totalSlotsNeeded = daysInMonth * shiftsPerDay * personsPerShift\n\n  // Return null if not enough slots in optimized array\n  if (optimized.length < totalSlotsNeeded) {\n    throw new Error(\"Not enough slots in optimized schedule\")\n  }\n\n  const schedule: Schedule = {}\n  let slotIndex = 0\n\n  for (let day = 1; day <= daysInMonth; day++) {\n    schedule[day] = []\n    for (let shift = 0; shift < shiftsPerDay; shift++) {\n      for (let person = 0; person < personsPerShift; person++) {\n        const empIndex = optimized[slotIndex]\n\n        if (empIndex >= 0 && empIndex < employees.length) {\n          schedule[day].push(employees[empIndex].id)\n          slotIndex++\n        } else {\n          throw new Error(\n            `Invalid employee index ${empIndex} in optimized schedule`\n          )\n        }\n      }\n    }\n  }\n\n  return schedule\n}\n\n// Simply assign everyone their maximum shifts\nconst generateInitialSchedule = (employees: Employee[]): OptimizedSchedule => {\n  const optimized: OptimizedSchedule = []\n\n  employees.forEach((emp, empIndex) => {\n    for (let i = 0; i < emp.shiftsPerMonth; i++) {\n      optimized.push(empIndex)\n    }\n  })\n\n  // Shuffle\n  for (let i = optimized.length - 1; i > 0; i--) {\n    const j = randint(i + 1)\n    ;[optimized[i], optimized[j]] = [optimized[j], optimized[i]]\n  }\n\n  return optimized\n}\n\n// Cost function to evaluate optimized schedule quality\nconst calcCost = (\n  optimized: OptimizedSchedule,\n  employees: Employee[],\n  constraints: Constraint[],\n  settings: ScheduleSettings,\n  daysInMonth: number,\n  selectedMonth: number,\n  selectedYear: number\n): number => {\n  let cost = 0\n  const { shiftsPerDay, personsPerShift } = settings\n  const totalSlotsNeeded = daysInMonth * shiftsPerDay * personsPerShift\n\n  // Penalty weights\n  const AVOID_VIOLATION_PENALTY = 1000\n  const DUPLICATE_PERSON_IN_SHIFT_PENALTY = 2000\n  const CONSECUTIVE_PENALTY = 100\n  const WEEKLY_LIMIT_PENALTY = 100\n  const UNEVEN_DISTRIBUTION_PENALTY = 50\n  const MISSED_PREFERENCE_PENALTY = 10\n  const REST_DAYS_PENALTY = 80\n  const HOLIDAY_DISTRIBUTION_PENALTY = 1000\n  const WEEKEND_CONSECUTIVE_PENALTY = 50\n\n  // Track employee metrics\n  const employeeShiftCounts = new Array(employees.length).fill(0)\n  const employeeConsecutiveDays = employees.map(() => ({ current: 0, max: 0 }))\n  const employeeHolidayShifts = new Array(employees.length).fill(0)\n  const employeeWeekdayShifts = new Array(employees.length).fill(0)\n  const employeeWeekendConsecutiveDays = employees.map(() => ({\n    current: 0,\n    max: 0,\n  }))\n\n  // Only consider the first totalSlotsNeeded slots\n  const activeSlots = optimized.slice(0, totalSlotsNeeded)\n  if (activeSlots.length < totalSlotsNeeded) {\n    throw new Error(\n      `Optimized schedule does not have enough slots: expected ${totalSlotsNeeded}, got ${activeSlots.length}`\n    )\n  }\n  activeSlots.forEach((emp) => {\n    if (emp < -1 || emp >= employees.length) {\n      throw new Error(`Invalid employee index ${emp} in optimized schedule`)\n    }\n  })\n\n  // Check each day\n  for (let day = 0; day < daysInMonth; day++) {\n    const dayNumber = day + 1\n\n    // Get all assigned employees for this day\n    const dayStartSlot = day * shiftsPerDay * personsPerShift\n    const dayEndSlot = dayStartSlot + shiftsPerDay * personsPerShift\n\n    const assignedEmployeeIndices = activeSlots.slice(dayStartSlot, dayEndSlot)\n\n    // Check for duplicate persons in the same shift\n    for (let shift = 0; shift < shiftsPerDay; shift++) {\n      const shiftStartSlot = dayStartSlot + shift * personsPerShift\n      const shiftEndSlot = shiftStartSlot + personsPerShift\n\n      const uniqueEmployees = new Set(\n        activeSlots.slice(shiftStartSlot, shiftEndSlot)\n      )\n\n      // If set length is less than personsPerShift, there are duplicates\n      if (uniqueEmployees.size < personsPerShift) {\n        cost += DUPLICATE_PERSON_IN_SHIFT_PENALTY\n      }\n    }\n\n    const isWeekendDay = isWeekend(dayNumber, selectedMonth, selectedYear)\n\n    // Check constraints\n    constraints.forEach((constraint) => {\n      if (constraint.type === \"avoid\" && constraint.date === dayNumber) {\n        const empIndex = employees.findIndex(\n          (emp) => emp.id === constraint.employeeId\n        )\n        if (empIndex !== -1 && assignedEmployeeIndices.includes(empIndex)) {\n          cost += AVOID_VIOLATION_PENALTY\n        }\n      }\n      if (constraint.type === \"prefer\" && constraint.date === dayNumber) {\n        const empIndex = employees.findIndex(\n          (emp) => emp.id === constraint.employeeId\n        )\n        if (empIndex !== -1 && !assignedEmployeeIndices.includes(empIndex)) {\n          cost += MISSED_PREFERENCE_PENALTY\n        }\n      }\n    })\n\n    // Update employee metrics\n    const uniqueAssigned = [...new Set(assignedEmployeeIndices)]\n    uniqueAssigned.forEach((empIndex) => {\n      employeeShiftCounts[empIndex]++\n\n      // Track holiday vs weekday shifts\n      if (isWeekendDay) {\n        employeeHolidayShifts[empIndex]++\n      } else {\n        employeeWeekdayShifts[empIndex]++\n      }\n\n      // Check consecutive days\n      if (day > 0) {\n        // Check if employee worked yesterday\n        const yesterdayStartSlot = (day - 1) * shiftsPerDay * personsPerShift\n        const yesterdayEndSlot = day * shiftsPerDay * personsPerShift\n        let workedYesterday = false\n\n        for (\n          let slotIndex = yesterdayStartSlot;\n          slotIndex < yesterdayEndSlot;\n          slotIndex++\n        ) {\n          if (activeSlots[slotIndex] === empIndex) {\n            workedYesterday = true\n            break\n          }\n        }\n\n        if (workedYesterday) {\n          employeeConsecutiveDays[empIndex].current++\n        } else {\n          employeeConsecutiveDays[empIndex].current = 1\n        }\n      } else {\n        employeeConsecutiveDays[empIndex].current = 1\n      }\n\n      employeeConsecutiveDays[empIndex].max = Math.max(\n        employeeConsecutiveDays[empIndex].max,\n        employeeConsecutiveDays[empIndex].current\n      )\n\n      // Track weekend consecutive days for Weekend type employees\n      if (\n        isWeekendDay &&\n        employees[empIndex]?.tags.includes(\"tags.weekendType\")\n      ) {\n        if (day > 0) {\n          // Check if yesterday was also weekend and employee worked\n          const yesterdayNumber = day\n          const yesterdayIsWeekend = isWeekend(\n            yesterdayNumber,\n            selectedMonth,\n            selectedYear\n          )\n          const yesterdayStartSlot = (day - 1) * shiftsPerDay * personsPerShift\n          const yesterdayEndSlot = day * shiftsPerDay * personsPerShift\n          let workedYesterdayWeekend = false\n\n          if (yesterdayIsWeekend) {\n            for (\n              let slotIndex = yesterdayStartSlot;\n              slotIndex < Math.min(yesterdayEndSlot, activeSlots.length);\n              slotIndex++\n            ) {\n              if (activeSlots[slotIndex] === empIndex) {\n                workedYesterdayWeekend = true\n                break\n              }\n            }\n          }\n\n          if (workedYesterdayWeekend) {\n            employeeWeekendConsecutiveDays[empIndex].current++\n          } else {\n            employeeWeekendConsecutiveDays[empIndex].current = 1\n          }\n        } else {\n          employeeWeekendConsecutiveDays[empIndex].current = 1\n        }\n\n        employeeWeekendConsecutiveDays[empIndex].max = Math.max(\n          employeeWeekendConsecutiveDays[empIndex].max,\n          employeeWeekendConsecutiveDays[empIndex].current\n        )\n      } else {\n        // Reset weekend consecutive count for non-weekend days or non-weekend type employees\n        employeeWeekendConsecutiveDays[empIndex].current = 0\n      }\n    })\n\n    // Reset consecutive count for employees not working today\n    employees.forEach((emp, index) => {\n      if (!uniqueAssigned.includes(index)) {\n        employeeConsecutiveDays[index].current = 0\n        employeeWeekendConsecutiveDays[index].current = 0\n      }\n    })\n  }\n\n  // Penalty for exceeding consecutive shifts limit\n  employees.forEach((emp, index) => {\n    let penalty = 0\n    if (employeeConsecutiveDays[index].max > settings.maxConsecutiveShifts) {\n      const excess =\n        employeeConsecutiveDays[index].max - settings.maxConsecutiveShifts\n      penalty += excess * CONSECUTIVE_PENALTY\n    }\n    // Weekend type employees get bonus for consecutive weekend work that can offset consecutive penalties\n    if (emp.tags.includes(\"tags.weekendType\")) {\n      if (employeeWeekendConsecutiveDays[index].max >= 2) {\n        penalty = 0\n      } else {\n        penalty += WEEKEND_CONSECUTIVE_PENALTY\n      }\n    }\n    cost += penalty\n  })\n\n  // Check weekly limits and rest days\n  for (let week = 0; week < Math.ceil(daysInMonth / 7); week++) {\n    const weekStart = week * 7\n    const weekEnd = Math.min(weekStart + 6, daysInMonth - 1)\n\n    employees.forEach((emp, empIndex) => {\n      let weeklyShifts = 0\n      const workDays: number[] = []\n\n      for (let day = weekStart; day <= weekEnd; day++) {\n        const dayStartSlot = day * shiftsPerDay * personsPerShift\n        const dayEndSlot = Math.min(\n          (day + 1) * shiftsPerDay * personsPerShift,\n          activeSlots.length\n        )\n        let workedThisDay = false\n\n        for (\n          let slotIndex = dayStartSlot;\n          slotIndex < dayEndSlot;\n          slotIndex++\n        ) {\n          if (activeSlots[slotIndex] === empIndex) {\n            workedThisDay = true\n            break\n          }\n        }\n\n        if (workedThisDay) {\n          weeklyShifts++\n          workDays.push(day)\n        }\n      }\n\n      // Weekly limits penalty\n      if (weeklyShifts > settings.maxShiftsPerWeek) {\n        cost +=\n          (weeklyShifts - settings.maxShiftsPerWeek) * WEEKLY_LIMIT_PENALTY\n      }\n\n      // Rest days penalty\n      for (let i = 0; i < workDays.length - 1; i++) {\n        const daysBetween = workDays[i + 1] - workDays[i] - 1\n        if (daysBetween < settings.minRestDaysBetweenShifts) {\n          cost +=\n            (settings.minRestDaysBetweenShifts - daysBetween) *\n            REST_DAYS_PENALTY\n        }\n      }\n    })\n  }\n\n  // Even distribution penalty\n  if (settings.evenDistribution) {\n    const avgShifts =\n      employeeShiftCounts.reduce((sum, count) => sum + count, 0) /\n      employeeShiftCounts.length\n    const variance =\n      employeeShiftCounts.reduce(\n        (sum, count) => sum + Math.pow(count - avgShifts, 2),\n        0\n      ) / employeeShiftCounts.length\n    cost += variance * UNEVEN_DISTRIBUTION_PENALTY\n  }\n\n  const totalHolidayShifts = employeeHolidayShifts.reduce(\n    (sum, count) => sum + count,\n    0\n  )\n  const totalWeekdayShifts = employeeWeekdayShifts.reduce(\n    (sum, count) => sum + count,\n    0\n  )\n\n  if (totalHolidayShifts > 0 && totalWeekdayShifts > 0) {\n    employees.forEach((_, empIndex) => {\n      const employeeTotalShifts = employeeShiftCounts[empIndex]\n      if (employeeTotalShifts > 0) {\n        const holidayRatio =\n          employeeHolidayShifts[empIndex] / employeeTotalShifts\n        const globalHolidayRatio =\n          totalHolidayShifts / (totalHolidayShifts + totalWeekdayShifts)\n\n        const holidayRatioDeviation = Math.abs(\n          holidayRatio - globalHolidayRatio\n        )\n\n        // 特别惩罚只值假日班或只值平日班的员工\n        if (\n          employeeHolidayShifts[empIndex] > 0 &&\n          employeeWeekdayShifts[empIndex] === 0 &&\n          employeeTotalShifts > 1\n        ) {\n          cost += HOLIDAY_DISTRIBUTION_PENALTY * 2\n        } else if (\n          employeeWeekdayShifts[empIndex] > 0 &&\n          employeeHolidayShifts[empIndex] === 0 &&\n          employeeTotalShifts > 1\n        ) {\n          cost += HOLIDAY_DISTRIBUTION_PENALTY\n        } else if (holidayRatioDeviation > 0.3) {\n          cost += holidayRatioDeviation * HOLIDAY_DISTRIBUTION_PENALTY\n        }\n      }\n    })\n  }\n  console.log(`Cost calculated: ${cost}`)\n\n  return cost\n}\n\n// Generate a neighbor solution by making permutations of the optimized schedule\nconst generateOptimizedNeighbor = (\n  currentOptimized: OptimizedSchedule\n): OptimizedSchedule => {\n  const newOptimized = [...currentOptimized]\n\n  if (newOptimized.length < 2) return newOptimized\n\n  const operations = [\"swap\", \"move\", \"reverse\", \"transport\"]\n  const operation = operations[randint(operations.length)]\n  const i = randint(newOptimized.length)\n  const j = randint(newOptimized.length)\n\n  switch (operation) {\n    case \"swap\": {\n      ;[newOptimized[i], newOptimized[j]] = [newOptimized[j], newOptimized[i]]\n      break\n    }\n\n    case \"move\": {\n      const element = newOptimized.splice(i, 1)[0]\n      newOptimized.splice(j, 0, element)\n      break\n    }\n\n    case \"reverse\": {\n      let left = Math.min(i, j)\n      let right = Math.max(i, j)\n      while (left < right) {\n        ;[newOptimized[left], newOptimized[right]] = [\n          newOptimized[right],\n          newOptimized[left],\n        ]\n        left++\n        right--\n      }\n      break\n    }\n\n    case \"transport\": {\n      if (newOptimized.length < 3) break // Need at least 3 elements for meaningful transport\n\n      const start = Math.min(i, j)\n      const end = Math.max(i, j)\n\n      if (start < end) {\n        // Extract the segment [start, end]\n        const segment = newOptimized.splice(start, end - start + 1)\n\n        // Choose insertion position k (excluding the original range)\n        const k = randint(newOptimized.length)\n\n        // Insert the segment at position k\n        newOptimized.splice(k, 0, ...segment)\n      }\n      break\n    }\n  }\n\n  return newOptimized\n}\n\nexport const generateSchedule = (\n  employees: Employee[],\n  constraints: Constraint[],\n  settings: ScheduleSettings,\n  selectedMonth: number,\n  selectedYear: number\n): { schedule: Schedule; success: boolean; message: string } => {\n  if (employees.length === 0) {\n    return {\n      schedule: {},\n      success: false,\n      message: \"Please add employees before generating a schedule.\",\n    }\n  }\n\n  const daysInMonth = getDaysInMonth(selectedMonth, selectedYear)\n\n  // Calculate total shifts needed and available\n  const totalShiftsNeeded =\n    daysInMonth * settings.shiftsPerDay * settings.personsPerShift\n  const totalShiftsAvailable = employees.reduce(\n    (sum, emp) => sum + emp.shiftsPerMonth,\n    0\n  )\n\n  if (totalShiftsAvailable < totalShiftsNeeded) {\n    return {\n      schedule: {},\n      success: false,\n      message: `Need ${totalShiftsNeeded} total shifts, but only ${totalShiftsAvailable} available.`,\n    }\n  }\n\n  // Generate initial optimized solution\n  const initialOptimized = generateInitialSchedule(employees)\n\n  // Configure simulated annealing with optimized schedule\n  const tempMax = 1000\n  const tempMin = 0.1\n  const coolingRate = 0.99\n\n  // Temperature function\n  const getTemp = (previousTemp: number) => previousTemp * coolingRate\n\n  // Energy function using optimized schedule\n  const getEnergy = (optimized: OptimizedSchedule) =>\n    calcCost(\n      optimized,\n      employees,\n      constraints,\n      settings,\n      daysInMonth,\n      selectedMonth,\n      selectedYear\n    )\n\n  // New state function using optimized schedule\n  const newState = (currentState: OptimizedSchedule) =>\n    generateOptimizedNeighbor(currentState)\n\n  try {\n    // Run simulated annealing with optimized schedule\n    console.log(\n      `Starting optimized simulated annealing with ${employees.length} employees, ${daysInMonth} days`\n    )\n    const startTime = Date.now()\n\n    const result = simulatedAnnealing({\n      initialState: initialOptimized,\n      tempMax: tempMax,\n      tempMin: tempMin,\n      newState: newState,\n      getTemp: getTemp,\n      getEnergy: getEnergy,\n    })\n\n    const endTime = Date.now()\n    console.log(`Simulated annealing completed in ${endTime - startTime}ms`)\n\n    // Convert back to the original Schedule format\n    const finalSchedule = optimizedToSchedule(\n      result,\n      employees,\n      settings,\n      daysInMonth\n    )\n\n    // Verify the solution using the optimized cost function\n    const finalCost = calcCost(\n      result,\n      employees,\n      constraints,\n      settings,\n      daysInMonth,\n      selectedMonth,\n      selectedYear\n    )\n\n    const message =\n      finalCost === 0\n        ? \"Perfect schedule generated with all constraints satisfied!\"\n        : `Schedule generated with optimization score: ${Math.round(\n            Math.max(0, finalCost)\n          )}`\n\n    return {\n      schedule: finalSchedule,\n      success: true,\n      message,\n    }\n  } catch (error) {\n    console.error(\"Simulated annealing failed:\", error)\n\n    return {\n      schedule: {},\n      success: false,\n      message: \"Simulated annealing failed.\",\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3891, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/hooks/useScheduleGeneration.ts"],"sourcesContent":["import { useState } from \"react\"\nimport {\n  Employee,\n  Constraint,\n  Schedule,\n  ScheduleSettings,\n} from \"@/types/schedule\"\nimport { generateSchedule } from \"@/utils/scheduleUtils\"\nimport { toast } from \"sonner\"\n\nexport const useScheduleGeneration = () => {\n  const [isGenerating, setIsGenerating] = useState(false)\n\n  const handleGenerateSchedule = async (\n    employees: Employee[],\n    constraints: Constraint[],\n    settings: ScheduleSettings,\n    selectedMonth: number,\n    selectedYear: number,\n    setSchedule: (schedule: Schedule) => void\n  ) => {\n    setIsGenerating(true)\n\n    try {\n      // Add small delay to show loading state\n      await new Promise((resolve) => setTimeout(resolve, 500))\n\n      const result = generateSchedule(\n        employees,\n        constraints,\n        settings,\n        selectedMonth,\n        selectedYear\n      )\n\n      if (result.success) {\n        setSchedule(result.schedule)\n        toast.success(\"Schedule generated\", {\n          description: result.message,\n        })\n      } else {\n        toast.error(\"Generation failed\", {\n          description: result.message,\n        })\n      }\n    } catch {\n      toast.error(\"Generation error\", {\n        description:\n          \"An unexpected error occurred while generating the schedule.\",\n      })\n    } finally {\n      setIsGenerating(false)\n    }\n  }\n\n  return {\n    isGenerating,\n    handleGenerateSchedule,\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AAOA;AACA;;;;;AAEO,MAAM,wBAAwB;;IACnC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,yBAAyB,OAC7B,WACA,aACA,UACA,eACA,cACA;QAEA,gBAAgB;QAEhB,IAAI;YACF,wCAAwC;YACxC,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;YAEnD,MAAM,SAAS,CAAA,GAAA,gIAAA,CAAA,mBAAgB,AAAD,EAC5B,WACA,aACA,UACA,eACA;YAGF,IAAI,OAAO,OAAO,EAAE;gBAClB,YAAY,OAAO,QAAQ;gBAC3B,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC,sBAAsB;oBAClC,aAAa,OAAO,OAAO;gBAC7B;YACF,OAAO;gBACL,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,qBAAqB;oBAC/B,aAAa,OAAO,OAAO;gBAC7B;YACF;QACF,EAAE,OAAM;YACN,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,oBAAoB;gBAC9B,aACE;YACJ;QACF,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,OAAO;QACL;QACA;IACF;AACF;GAjDa","debugId":null}},
    {"offset": {"line": 3943, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Calendar, Settings, Info } from \"lucide-react\"\nimport { ScheduleHistory } from \"@/components/schedule/ScheduleHistory\"\nimport { EmployeeManager } from \"@/components/schedule/EmployeeManager\"\nimport { ConstraintsPanel } from \"@/components/schedule/ConstraintsPanel\"\nimport { ScheduleView } from \"@/components/schedule/ScheduleView\"\nimport { LanguageSwitcher } from \"@/components/LanguageSwitcher\"\nimport { useScheduleData } from \"@/hooks/useScheduleData\"\nimport { useEmployeeManagement } from \"@/hooks/useEmployeeManagement\"\nimport { useConstraintManagement } from \"@/hooks/useConstraintManagement\"\nimport { useScheduleGeneration } from \"@/hooks/useScheduleGeneration\"\nimport { useTranslations } from \"next-intl\"\n\nexport default function ScheduleManager() {\n  const t = useTranslations()\n\n  const PREDEFINED_TAGS = [\n    \"tags.weekendType\",\n    \"tags.burger\",\n    \"tags.morningShift\",\n    \"tags.eveningShift\",\n    \"tags.manager\",\n    \"tags.partTime\",\n  ]\n  const {\n    // Schedule history management\n    schedules,\n    activeScheduleId,\n    setActiveScheduleId,\n    addSchedule,\n    deleteSchedule,\n\n    // Active schedule data\n    selectedMonth,\n    selectedYear,\n    employees,\n    setEmployees,\n    constraints,\n    setConstraints,\n    schedule,\n    setSchedule,\n\n    // Global settings\n    settings,\n    setSettings,\n  } = useScheduleData()\n\n  const { addEmployee, removeEmployee, updateEmployee, toggleEmployeeTag } =\n    useEmployeeManagement(\n      employees,\n      setEmployees,\n      constraints,\n      setConstraints,\n      schedule,\n      setSchedule,\n      t\n    )\n\n  const { setConstraint, removeConstraint } = useConstraintManagement(\n    constraints,\n    setConstraints\n  )\n\n  const { isGenerating, handleGenerateSchedule } = useScheduleGeneration()\n\n  const [selectedEmployee, setSelectedEmployee] = useState<string>(\"\")\n\n  const onGenerateSchedule = () => {\n    handleGenerateSchedule(\n      employees,\n      constraints,\n      settings,\n      selectedMonth,\n      selectedYear,\n      setSchedule\n    )\n  }\n\n  return (\n    <div>\n      <Tabs defaultValue=\"about\" className=\"space-y-0\">\n        <TabsList className=\"w-full\">\n          <div className=\"container flex justify-between items-center\">\n            <div className=\"flex\">\n              <TabsTrigger value=\"about\" className=\"flex items-center gap-2\">\n                <Info className=\"w-4 h-4\" />\n                About\n              </TabsTrigger>\n              <TabsTrigger value=\"setup\" className=\"flex items-center gap-2\">\n                <Calendar className=\"w-4 h-4\" />\n                {t(\"page.setup\")}\n              </TabsTrigger>\n              <TabsTrigger\n                value=\"constraints\"\n                className=\"flex items-center gap-2\"\n              >\n                <Settings className=\"w-4 h-4\" />\n                {t(\"page.constraints\")}\n              </TabsTrigger>\n            </div>\n            <div className=\"flex items-center\">\n              <LanguageSwitcher />\n            </div>\n          </div>\n        </TabsList>\n\n        <TabsContent value=\"about\" className=\"mt-0\">\n          <div className=\"container mx-auto p-6 max-w-6xl\">\n            <div className=\"space-y-6\">\n              <div className=\"text-center max-w-3xl mx-auto\">\n                <h1 className=\"text-4xl font-bold mb-4\">{t(\"page.title\")}</h1>\n                <p className=\"text-lg text-muted-foreground leading-relaxed\">\n                  {t(\"page.description\")}\n                </p>\n              </div>\n            </div>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"setup\" className=\"mt-0\">\n          <div className=\"container mx-auto p-6 max-w-6xl\">\n            <div className=\"space-y-6\">\n              <ScheduleHistory\n                schedules={schedules}\n                activeScheduleId={activeScheduleId}\n                onScheduleSelect={setActiveScheduleId}\n                onScheduleAdd={addSchedule}\n                onScheduleDelete={deleteSchedule}\n              />\n              <div className=\"grid grid-cols-1 xl:grid-cols-3 gap-6\">\n                <EmployeeManager\n                  employees={employees}\n                  selectedEmployee={selectedEmployee}\n                  onEmployeeSelect={setSelectedEmployee}\n                  onAddEmployee={addEmployee}\n                  onRemoveEmployee={removeEmployee}\n                  onUpdateEmployee={updateEmployee}\n                  onToggleTag={toggleEmployeeTag}\n                  predefinedTags={PREDEFINED_TAGS}\n                  hasActiveSchedule={activeScheduleId !== null}\n                />\n                <div className=\"xl:col-span-2\">\n                  <ScheduleView\n                    schedule={schedule}\n                    employees={employees}\n                    selectedMonth={selectedMonth}\n                    selectedYear={selectedYear}\n                    hasActiveSchedule={activeScheduleId !== null}\n                    constraints={constraints}\n                    selectedEmployee={selectedEmployee}\n                    onSetConstraint={setConstraint}\n                    onRemoveConstraint={removeConstraint}\n                    onGenerateSchedule={onGenerateSchedule}\n                    isGenerating={isGenerating}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"constraints\" className=\"mt-0\">\n          <div className=\"container mx-auto p-6 max-w-6xl\">\n            <div className=\"space-y-6\">\n              <ConstraintsPanel\n                settings={settings}\n                onSettingsChange={setSettings}\n              />\n            </div>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}