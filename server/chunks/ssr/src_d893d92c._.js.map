{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/i18n/routing.ts"],"sourcesContent":["import { defineRouting } from \"next-intl/routing\"\nimport { createNavigation } from \"next-intl/navigation\"\n\nexport const routing = defineRouting({\n  // A list of all locales that are supported\n  locales: [\"en\", \"zh-TW\", \"zh-CN\"],\n\n  // Used when no locale matches\n  defaultLocale: \"en\",\n})\n\n// Lightweight wrappers around Next.js' navigation APIs\n// that will consider the routing configuration\nexport const { Link, redirect, usePathname, useRouter } =\n  createNavigation(routing)\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;;;AAEO,MAAM,UAAU,CAAA,GAAA,kOAAA,CAAA,gBAAa,AAAD,EAAE;IACnC,2CAA2C;IAC3C,SAAS;QAAC;QAAM;QAAS;KAAQ;IAEjC,8BAA8B;IAC9B,eAAe;AACjB;AAIO,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,GACrD,CAAA,GAAA,8PAAA,CAAA,mBAAgB,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/i18n/request.ts"],"sourcesContent":["import { getRequestConfig } from 'next-intl/server'\nimport { routing } from './routing'\n\nexport default getRequestConfig(async ({ requestLocale }) => {\n  // This typically corresponds to the `[locale]` segment\n  let locale = await requestLocale\n\n  // Ensure that a valid locale is used\n  if (!locale || !routing.locales.includes(locale as any)) {\n    locale = routing.defaultLocale\n  }\n\n  return {\n    locale,\n    messages: (await import(`../../messages/${locale}.json`)).default\n  }\n})"],"names":[],"mappings":";;;AAAA;AACA;;;uCAEe,CAAA,GAAA,0PAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO,EAAE,aAAa,EAAE;IACtD,uDAAuD;IACvD,IAAI,SAAS,MAAM;IAEnB,qCAAqC;IACrC,IAAI,CAAC,UAAU,CAAC,sHAAA,CAAA,UAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAgB;QACvD,SAAS,sHAAA,CAAA,UAAO,CAAC,aAAa;IAChC;IAEA,OAAO;QACL;QACA,UAAU,CAAC;;;;;;;;;;;;;kBAAa,CAAC,eAAe,EAAE,OAAO,KAAK,CAAC,CAAC,EAAE,OAAO;IACnE;AACF","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/components/ui/sonner.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sonner.tsx <module evaluation>\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,8DACA","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/components/ui/sonner.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/sonner.tsx\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,0CACA","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/components/ui/language-selector.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LanguageSelector = registerClientReference(\n    function() { throw new Error(\"Attempted to call LanguageSelector() from the server but LanguageSelector is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/language-selector.tsx <module evaluation>\",\n    \"LanguageSelector\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,yEACA","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/components/ui/language-selector.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LanguageSelector = registerClientReference(\n    function() { throw new Error(\"Attempted to call LanguageSelector() from the server but LanguageSelector is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/language-selector.tsx\",\n    \"LanguageSelector\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,qDACA","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/c88tm/github_jfif7/scheduler/src/app/%5Blocale%5D/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\"\nimport { Geist, Geist_Mono } from \"next/font/google\"\nimport { NextIntlClientProvider } from 'next-intl'\nimport { getMessages } from 'next-intl/server'\nimport { Toaster } from \"@/components/ui/sonner\"\nimport { LanguageSelector } from \"@/components/ui/language-selector\"\nimport \"../globals.css\"\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n})\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n})\n\nexport const metadata: Metadata = {\n  title: \"Schedule Manager\",\n  description: \"Manage employee schedules with constraints and preferences\",\n}\n\nexport default async function LocaleLayout({\n  children,\n  params,\n}: {\n  children: React.ReactNode\n  params: Promise<{ locale: string }>\n}) {\n  const { locale } = await params\n  const messages = await getMessages()\n\n  return (\n    <html lang={locale}>\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        <NextIntlClientProvider messages={messages}>\n          <div className=\"min-h-screen bg-background\">\n            <header className=\"border-b\">\n              <div className=\"container mx-auto px-6 py-4 flex justify-between items-center\">\n                <h1 className=\"text-xl font-semibold\">Schedule Manager</h1>\n                <LanguageSelector />\n              </div>\n            </header>\n            <main>\n              {children}\n            </main>\n          </div>\n          <Toaster />\n        </NextIntlClientProvider>\n      </body>\n    </html>\n  )\n}\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;;AAaO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,eAAe,aAAa,EACzC,QAAQ,EACR,MAAM,EAIP;IACC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;IACzB,MAAM,WAAW,MAAM,CAAA,GAAA,gPAAA,CAAA,cAAW,AAAD;IAEjC,qBACE,8OAAC;QAAK,MAAM;kBACV,cAAA,8OAAC;YACC,WAAW,GAAG,yIAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,8IAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;sBAEpE,cAAA,8OAAC,kQAAA,CAAA,yBAAsB;gBAAC,UAAU;;kCAChC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAO,WAAU;0CAChB,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAAwB;;;;;;sDACtC,8OAAC,gJAAA,CAAA,mBAAgB;;;;;;;;;;;;;;;;0CAGrB,8OAAC;0CACE;;;;;;;;;;;;kCAGL,8OAAC,kIAAA,CAAA,UAAO;;;;;;;;;;;;;;;;;;;;;AAKlB","debugId":null}}]
}